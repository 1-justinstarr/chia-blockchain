name: Benchmarks

on:
  push:
    branches:
      - main
    tags:
        - '**'
  pull_request:
    branches:
      - '**'

concurrency:
  # SHA is added to the end if on `main` to let all main workflows run
  group: ${{ github.ref }}-${{ github.workflow }}-${{ github.event_name }}-${{ github.ref == 'refs/heads/main' && github.sha || '' }}
  cancel-in-progress: true

jobs:
  build:
    name: Benchmarks
    runs-on: benchmark
    timeout-minutes: 30
    container: "docker://ubuntu:impish"

    steps:
    - name: Prepare Ubuntu
      if: ${{ matrix.distribution.type == 'ubuntu' }}
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        apt-get --yes update
        apt-get install --yes git lsb-release sudo

    - name: Checkout Code
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Get pip cache dir
      id: pip-cache
      run: |
        echo "::set-output name=dir::$(pip cache dir)"

    - name: Cache pip
      uses: actions/cache@v3
      with:
        path: ${{ steps.pip-cache.outputs.dir }}
        key: ${{ runner.os }}-pip-${{ hashFiles('**/setup.py') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install ubuntu dependencies
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo apt-get install -y software-properties-common
        sudo add-apt-repository ppa:deadsnakes/ppa
        sudo apt-get update
        sudo apt-get install -y python${{ matrix.python-version }}-venv python${{ matrix.python-version }}-distutils git

    - name: Run install script
      env:
        INSTALL_PYTHON_VERSION: ${{ matrix.python-version }}
      run: |
        sh install.sh -d

    - name: pytest
      run: |
        . ./activate
        ./venv/bin/py.test -n 0 -m benchmark tests
